#pragma checksum "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\Pages\Users\Users.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5e421ecb364021a8da5e848dcbce3acaebf7bec3"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorClient.Client.Pages.Users
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using BlazorClient.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using BlazorClient.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using System.Security.Claims;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using BlazorClient.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 18 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 20 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\_Imports.razor"
using Blazored.Toast.Configuration;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\Pages\Users\Users.razor"
using CurrieTechnologies.Razor.SweetAlert2;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.LayoutAttribute(typeof(MainLayoutUsers))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/Users")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/Users/All")]
    public partial class Users : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 167 "C:\Users\samaritan\Documents\Visual Studio 2017\projects\sirach\LegatusHCM\BlazorClient\Client\Pages\Users\Users.razor"
       
    //
    List<SystemUsers> users = null;
    bool isloading = false;
    //
    string modal_title = string.Empty;//title of the modal
    string modal_mode = string.Empty;//new or edit
                                     //
    public SystemUsers system_user;

    /// <summary>
    /// init
    /// </summary>
    /// <returns></returns>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            await base.OnInitializedAsync();
            await ResetUser();
            if (!http_client.DefaultRequestHeaders.Contains("Authorization"))
            {
                http_client.DefaultRequestHeaders.Add("Authorization", $"Bearer {await GetAccessToken()}");
            }
            isloading = true;
            await FetchSystemUsers();
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);
            Console.WriteLine(ex.StackTrace);
        }
        finally
        {
            isloading = false;
        }
    }

    /// <summary>
    /// get currenct user detail from local strorage
    /// </summary>
    public async Task<string> GetUserDetail(string detail)
    {
        var json = await local_storage.GetItemAsStringAsync("current_user");
        dynamic json_string = JsonConvert.DeserializeObject(json);
        var detail_string = json_string[detail];
        return detail_string;
    }

    /// <summary>
    /// fetch the access token from the localstorage
    /// </summary>
    /// <returns></returns>
    private async Task<string> GetAccessToken()
    {
        string access_token = await local_storage.GetItemAsync<string>("access_token");
        return access_token;
    }

    /// <summary>
    /// handles the check chnaged event for the roles
    /// </summary>
    /// <param name="role"></param>
    /// <param name="e"></param>
    public void CheckRole(string role, ChangeEventArgs e)
    {
        bool is_checked = bool.Parse(e.Value.ToString());
        if (role == "super_user" && is_checked)
        {
            //clear and add all roles
            system_user.roles.Clear();
            system_user.roles.Add("super_user");
            system_user.roles.Add("business_partners");
            system_user.roles.Add("payroll");
            system_user.roles.Add("fleet_management");
            system_user.roles.Add("users");
            system_user.roles.Add("pos");
            system_user.roles.Add("tos");
        }
        else if (role == "super_user" && !is_checked)
        {
            system_user.roles.Clear();//clear all roles
        }
        else
        {
            if (is_checked && !system_user.roles.Contains(role))
            {
                system_user.roles.Add(role);
            }
            else
            {
                system_user.roles.Remove(role);
            }
        }
        ///becomes super user if all are checked
        if (system_user.roles.Count >= 6 && !system_user.roles.Contains("super_user"))
        {
            system_user.roles.Add("super_user");
        }
        else
        {
            system_user.roles.Remove("super_user");
        }
    }

    /// <summary>
    /// fetch system user from server
    /// </summary>
    /// <returns></returns>
    protected async Task FetchSystemUsers()
    {

        var response1 = await http_client.GetAsync("/SystemUsers/Users");
        var response2 = await response1.Content.ReadAsStringAsync();
        dynamic json = JsonConvert.DeserializeObject(response2);
        if (json.res == "ok")
        {
            users = JsonConvert.DeserializeObject<List<SystemUsers>>(json.data.ToString());
        }
        else
        {
            toastService.ShowError(json.data.ToString());
        }
    }

    /// <summary>
    /// submit the form
    /// </summary>
    public async Task SubmitForm()
    {
        if (system_user.roles.Count == 0)
        {
            toastService.ShowError("User must have at least one role");
            return;
        }
        try
        {
            isloading = true;
            var string_content = new StringContent(JsonConvert.SerializeObject(system_user), System.Text.Encoding.UTF8, "application/json");
            var response1 = await http_client.PostAsync("/SystemUsers/Users", string_content);
            var response2 = await response1.Content.ReadAsStringAsync();
            dynamic json = JsonConvert.DeserializeObject(response2);
            if (json.res == "ok")
            {
                //reset user
                await ResetUser();
                toastService.ShowSuccess(json.data.ToString());
                await FetchSystemUsers();
            }
            else
            {
                toastService.ShowError(json.data.ToString());
            }
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);
        }
        finally
        {
            isloading = false;
            await js.InvokeAsync<string>("showHideModal", new[] { "modal_new_user", "hide" });
        }
    }

    /// <summary>
    /// confirm delete this user
    /// </summary>
    /// <param name="user_id"></param>
    /// <returns></returns>
    async Task ConfirmDeleteUser(string user_id)
    {
        // async/await
        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
        {
            Title = "Delete this user?",
            //Type = SweetAlertType.Warning,
            ShowCancelButton = true,
            ConfirmButtonText = "Delete",
            CancelButtonText = "Cancel"
        });

        if (!string.IsNullOrEmpty(result.Value))
        {
            try
            {
                var response1 = await http_client.DeleteAsync($"/SystemUsers/Users/{user_id}");
                var response2 = await response1.Content.ReadAsStringAsync();
                dynamic json = JsonConvert.DeserializeObject(response2);
                if (json.res == "ok")
                {
                    toastService.ShowSuccess(json.data.ToString());
                    await FetchSystemUsers();
                }
                else
                {
                    toastService.ShowError(json.data.ToString());
                }
            }
            catch (Exception ex)
            {
                toastService.ShowError(ex.Message);
            }
        }

    }

    /// <summary>
    /// generate a new user
    /// </summary>
    async Task ResetUser()
    {
        system_user = new SystemUsers()
        {
            email = "user@company.com",
            password = "Password@123"
        };
        //await js.InvokeAsync<string>("showHideModal", new[] { "modal_new_user", "show" });
    }

    /// <summary>
    /// show the edit user form
    /// </summary>
    /// <param name="user"></param>
    /// <returns></returns>
    async Task DisplayEditUser(SystemUsers user)
    {
        system_user = user;
        await js.InvokeAsync<string>("showHideModal", new[] { "modal_new_user", "show" });
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime js { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http_client { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private SweetAlertService Swal { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private AuthenticationStateProvider authentication_state_provider { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.LocalStorage.ILocalStorageService local_storage { get; set; }
    }
}
#pragma warning restore 1591
